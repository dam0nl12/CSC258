vendor_name = ModelSim
source_file = 1, C:/Users/KeineZwei/Desktop/project/shift/shift_test.v
source_file = 1, output_files/Chain1.cdf
source_file = 1, output_files/Chain2.cdf
source_file = 1, output_files/Chain4.cdf
source_file = 1, output_files/Chain5.cdf
source_file = 1, output_files/Chain3.cdf
source_file = 1, output_files/Chain6.cdf
source_file = 1, C:/Users/KeineZwei/Desktop/project/shift/db/shift_test.cbx.xml
design_name = shift_test
instance = comp, \HEX0[0]~output , HEX0[0]~output, shift_test, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, shift_test, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, shift_test, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, shift_test, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, shift_test, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, shift_test, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, shift_test, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, shift_test, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, shift_test, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, shift_test, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, shift_test, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, shift_test, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, shift_test, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, shift_test, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, shift_test, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, shift_test, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, shift_test, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, shift_test, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, shift_test, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, shift_test, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, shift_test, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, shift_test, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, shift_test, 1
instance = comp, \KEY[0]~input , KEY[0]~input, shift_test, 1
instance = comp, \KEY[0]~inputCLKENA0 , KEY[0]~inputCLKENA0, shift_test, 1
instance = comp, \i1|col_out[2]~DUPLICATE , i1|col_out[2]~DUPLICATE, shift_test, 1
instance = comp, \i1|col_out[1] , i1|col_out[1], shift_test, 1
instance = comp, \i1|col_out[0] , i1|col_out[0], shift_test, 1
instance = comp, \i1|Add1~0 , i1|Add1~0, shift_test, 1
instance = comp, \i1|col_out[1]~DUPLICATE , i1|col_out[1]~DUPLICATE, shift_test, 1
instance = comp, \i1|col_out[3]~0 , i1|col_out[3]~0, shift_test, 1
instance = comp, \i1|col_out[3] , i1|col_out[3], shift_test, 1
instance = comp, \i1|col_out~2 , i1|col_out~2, shift_test, 1
instance = comp, \i1|col_out[2] , i1|col_out[2], shift_test, 1
instance = comp, \i1|col_out[3]~DUPLICATE , i1|col_out[3]~DUPLICATE, shift_test, 1
instance = comp, \i1|col_out~1 , i1|col_out~1, shift_test, 1
instance = comp, \i1|col_out[0]~DUPLICATE , i1|col_out[0]~DUPLICATE, shift_test, 1
instance = comp, \h1|HEX[0]~0 , h1|HEX[0]~0, shift_test, 1
instance = comp, \h1|HEX[1]~1 , h1|HEX[1]~1, shift_test, 1
instance = comp, \h1|HEX[2]~2 , h1|HEX[2]~2, shift_test, 1
instance = comp, \h1|HEX[3]~3 , h1|HEX[3]~3, shift_test, 1
instance = comp, \h1|HEX[4]~4 , h1|HEX[4]~4, shift_test, 1
instance = comp, \h1|HEX[5]~5 , h1|HEX[5]~5, shift_test, 1
instance = comp, \h1|HEX[6]~6 , h1|HEX[6]~6, shift_test, 1
instance = comp, \KEY[1]~input , KEY[1]~input, shift_test, 1
instance = comp, \KEY[1]~inputCLKENA0 , KEY[1]~inputCLKENA0, shift_test, 1
instance = comp, \i1|row_out[1] , i1|row_out[1], shift_test, 1
instance = comp, \i1|row_out[0] , i1|row_out[0], shift_test, 1
instance = comp, \i1|row_out~1 , i1|row_out~1, shift_test, 1
instance = comp, \i1|row_out[0]~DUPLICATE , i1|row_out[0]~DUPLICATE, shift_test, 1
instance = comp, \i1|Add0~0 , i1|Add0~0, shift_test, 1
instance = comp, \i1|row_out[1]~DUPLICATE , i1|row_out[1]~DUPLICATE, shift_test, 1
instance = comp, \i1|row_out[3] , i1|row_out[3], shift_test, 1
instance = comp, \i1|row_out~2 , i1|row_out~2, shift_test, 1
instance = comp, \i1|row_out[2] , i1|row_out[2], shift_test, 1
instance = comp, \i1|row_out[3]~0 , i1|row_out[3]~0, shift_test, 1
instance = comp, \i1|row_out[3]~DUPLICATE , i1|row_out[3]~DUPLICATE, shift_test, 1
instance = comp, \i1|row_out[2]~DUPLICATE , i1|row_out[2]~DUPLICATE, shift_test, 1
instance = comp, \h2|HEX[0]~0 , h2|HEX[0]~0, shift_test, 1
instance = comp, \h2|HEX[1]~1 , h2|HEX[1]~1, shift_test, 1
instance = comp, \h2|HEX[2]~2 , h2|HEX[2]~2, shift_test, 1
instance = comp, \h2|HEX[3]~3 , h2|HEX[3]~3, shift_test, 1
instance = comp, \h2|HEX[4]~4 , h2|HEX[4]~4, shift_test, 1
instance = comp, \h2|HEX[5]~5 , h2|HEX[5]~5, shift_test, 1
instance = comp, \h2|HEX[6]~6 , h2|HEX[6]~6, shift_test, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, shift_test, 1
instance = comp, \CLOCK_50~inputCLKENA0 , CLOCK_50~inputCLKENA0, shift_test, 1
instance = comp, \KEY[3]~input , KEY[3]~input, shift_test, 1
instance = comp, \i1|Mux8~0 , i1|Mux8~0, shift_test, 1
instance = comp, \KEY[2]~input , KEY[2]~input, shift_test, 1
instance = comp, \i1|shifter_val[0] , i1|shifter_val[0], shift_test, 1
instance = comp, \SW[0]~input , SW[0]~input, shift_test, 1
instance = comp, \c1|Add0~97 , c1|Add0~97, shift_test, 1
instance = comp, \c1|counter[0] , c1|counter[0], shift_test, 1
instance = comp, \c1|Add0~93 , c1|Add0~93, shift_test, 1
instance = comp, \c1|counter[1] , c1|counter[1], shift_test, 1
instance = comp, \c1|Add0~101 , c1|Add0~101, shift_test, 1
instance = comp, \c1|counter[2] , c1|counter[2], shift_test, 1
instance = comp, \c1|Add0~89 , c1|Add0~89, shift_test, 1
instance = comp, \c1|counter[3] , c1|counter[3], shift_test, 1
instance = comp, \c1|Add0~85 , c1|Add0~85, shift_test, 1
instance = comp, \c1|counter[4] , c1|counter[4], shift_test, 1
instance = comp, \c1|Add0~81 , c1|Add0~81, shift_test, 1
instance = comp, \c1|counter[5] , c1|counter[5], shift_test, 1
instance = comp, \c1|Add0~77 , c1|Add0~77, shift_test, 1
instance = comp, \c1|counter[6] , c1|counter[6], shift_test, 1
instance = comp, \c1|Add0~73 , c1|Add0~73, shift_test, 1
instance = comp, \c1|counter[7] , c1|counter[7], shift_test, 1
instance = comp, \c1|Add0~69 , c1|Add0~69, shift_test, 1
instance = comp, \c1|counter[8] , c1|counter[8], shift_test, 1
instance = comp, \c1|Add0~65 , c1|Add0~65, shift_test, 1
instance = comp, \c1|counter[9] , c1|counter[9], shift_test, 1
instance = comp, \c1|Add0~57 , c1|Add0~57, shift_test, 1
instance = comp, \c1|counter[10] , c1|counter[10], shift_test, 1
instance = comp, \c1|Add0~53 , c1|Add0~53, shift_test, 1
instance = comp, \c1|counter[11] , c1|counter[11], shift_test, 1
instance = comp, \c1|Add0~49 , c1|Add0~49, shift_test, 1
instance = comp, \c1|counter[12] , c1|counter[12], shift_test, 1
instance = comp, \c1|counter[21]~DUPLICATE , c1|counter[21]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~1 , c1|Add0~1, shift_test, 1
instance = comp, \c1|counter[13]~DUPLICATE , c1|counter[13]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~45 , c1|Add0~45, shift_test, 1
instance = comp, \c1|counter[14]~DUPLICATE , c1|counter[14]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~41 , c1|Add0~41, shift_test, 1
instance = comp, \c1|counter[15] , c1|counter[15], shift_test, 1
instance = comp, \c1|Add0~37 , c1|Add0~37, shift_test, 1
instance = comp, \c1|counter[16]~DUPLICATE , c1|counter[16]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~33 , c1|Add0~33, shift_test, 1
instance = comp, \c1|counter[17] , c1|counter[17], shift_test, 1
instance = comp, \c1|Add0~29 , c1|Add0~29, shift_test, 1
instance = comp, \c1|counter[18] , c1|counter[18], shift_test, 1
instance = comp, \c1|Add0~25 , c1|Add0~25, shift_test, 1
instance = comp, \c1|counter[19]~DUPLICATE , c1|counter[19]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~21 , c1|Add0~21, shift_test, 1
instance = comp, \c1|counter[20] , c1|counter[20], shift_test, 1
instance = comp, \c1|Add0~61 , c1|Add0~61, shift_test, 1
instance = comp, \c1|counter[21] , c1|counter[21], shift_test, 1
instance = comp, \c1|Equal0~2 , c1|Equal0~2, shift_test, 1
instance = comp, \c1|counter[1]~DUPLICATE , c1|counter[1]~DUPLICATE, shift_test, 1
instance = comp, \c1|Equal0~3 , c1|Equal0~3, shift_test, 1
instance = comp, \c1|counter[13] , c1|counter[13], shift_test, 1
instance = comp, \c1|counter[0]~DUPLICATE , c1|counter[0]~DUPLICATE, shift_test, 1
instance = comp, \c1|Add0~17 , c1|Add0~17, shift_test, 1
instance = comp, \c1|counter[22] , c1|counter[22], shift_test, 1
instance = comp, \c1|Add0~13 , c1|Add0~13, shift_test, 1
instance = comp, \c1|counter[23] , c1|counter[23], shift_test, 1
instance = comp, \c1|Add0~9 , c1|Add0~9, shift_test, 1
instance = comp, \c1|counter[24] , c1|counter[24], shift_test, 1
instance = comp, \c1|Add0~5 , c1|Add0~5, shift_test, 1
instance = comp, \c1|counter[25] , c1|counter[25], shift_test, 1
instance = comp, \c1|Add0~109 , c1|Add0~109, shift_test, 1
instance = comp, \c1|counter[26] , c1|counter[26], shift_test, 1
instance = comp, \c1|Add0~105 , c1|Add0~105, shift_test, 1
instance = comp, \c1|counter[27] , c1|counter[27], shift_test, 1
instance = comp, \c1|Equal0~4 , c1|Equal0~4, shift_test, 1
instance = comp, \c1|counter[16] , c1|counter[16], shift_test, 1
instance = comp, \c1|counter[14] , c1|counter[14], shift_test, 1
instance = comp, \c1|Equal0~1 , c1|Equal0~1, shift_test, 1
instance = comp, \c1|counter[19] , c1|counter[19], shift_test, 1
instance = comp, \c1|Equal0~0 , c1|Equal0~0, shift_test, 1
instance = comp, \c1|Equal0~5 , c1|Equal0~5, shift_test, 1
instance = comp, \c1|enable , c1|enable, shift_test, 1
instance = comp, \s9|curr_state~1 , s9|curr_state~1, shift_test, 1
instance = comp, \s9|curr_state[0] , s9|curr_state[0], shift_test, 1
instance = comp, \s9|curr_state~0 , s9|curr_state~0, shift_test, 1
instance = comp, \s9|curr_state[1] , s9|curr_state[1], shift_test, 1
instance = comp, \s9|q~0 , s9|q~0, shift_test, 1
instance = comp, \s9|q , s9|q, shift_test, 1
instance = comp, \i1|Mux7~0 , i1|Mux7~0, shift_test, 1
instance = comp, \i1|shifter_val[1] , i1|shifter_val[1], shift_test, 1
instance = comp, \s8|curr_state~1 , s8|curr_state~1, shift_test, 1
instance = comp, \s8|curr_state[0] , s8|curr_state[0], shift_test, 1
instance = comp, \s8|curr_state~0 , s8|curr_state~0, shift_test, 1
instance = comp, \s8|curr_state[1] , s8|curr_state[1], shift_test, 1
instance = comp, \s8|q~0 , s8|q~0, shift_test, 1
instance = comp, \s8|q , s8|q, shift_test, 1
instance = comp, \i1|Mux6~0 , i1|Mux6~0, shift_test, 1
instance = comp, \i1|shifter_val[2] , i1|shifter_val[2], shift_test, 1
instance = comp, \s7|curr_state~1 , s7|curr_state~1, shift_test, 1
instance = comp, \s7|curr_state[0] , s7|curr_state[0], shift_test, 1
instance = comp, \s7|curr_state~0 , s7|curr_state~0, shift_test, 1
instance = comp, \s7|curr_state[1] , s7|curr_state[1], shift_test, 1
instance = comp, \s7|q~0 , s7|q~0, shift_test, 1
instance = comp, \s7|q , s7|q, shift_test, 1
instance = comp, \i1|Mux5~0 , i1|Mux5~0, shift_test, 1
instance = comp, \i1|shifter_val[3] , i1|shifter_val[3], shift_test, 1
instance = comp, \s6|curr_state~1 , s6|curr_state~1, shift_test, 1
instance = comp, \s6|curr_state[0] , s6|curr_state[0], shift_test, 1
instance = comp, \s6|curr_state~0 , s6|curr_state~0, shift_test, 1
instance = comp, \s6|curr_state[1] , s6|curr_state[1], shift_test, 1
instance = comp, \s6|q~0 , s6|q~0, shift_test, 1
instance = comp, \s6|q , s6|q, shift_test, 1
instance = comp, \i1|Mux4~0 , i1|Mux4~0, shift_test, 1
instance = comp, \i1|shifter_val[4] , i1|shifter_val[4], shift_test, 1
instance = comp, \s5|curr_state~1 , s5|curr_state~1, shift_test, 1
instance = comp, \s5|curr_state[0] , s5|curr_state[0], shift_test, 1
instance = comp, \s5|curr_state~0 , s5|curr_state~0, shift_test, 1
instance = comp, \s5|curr_state[1] , s5|curr_state[1], shift_test, 1
instance = comp, \s5|q~0 , s5|q~0, shift_test, 1
instance = comp, \s5|q , s5|q, shift_test, 1
instance = comp, \i1|Mux3~0 , i1|Mux3~0, shift_test, 1
instance = comp, \i1|shifter_val[5] , i1|shifter_val[5], shift_test, 1
instance = comp, \s4|curr_state~1 , s4|curr_state~1, shift_test, 1
instance = comp, \s4|curr_state[0] , s4|curr_state[0], shift_test, 1
instance = comp, \s4|curr_state~0 , s4|curr_state~0, shift_test, 1
instance = comp, \s4|curr_state[1] , s4|curr_state[1], shift_test, 1
instance = comp, \s4|q~0 , s4|q~0, shift_test, 1
instance = comp, \s4|q , s4|q, shift_test, 1
instance = comp, \i1|Mux2~0 , i1|Mux2~0, shift_test, 1
instance = comp, \i1|shifter_val[6] , i1|shifter_val[6], shift_test, 1
instance = comp, \s3|curr_state~1 , s3|curr_state~1, shift_test, 1
instance = comp, \s3|curr_state[0] , s3|curr_state[0], shift_test, 1
instance = comp, \s3|curr_state~0 , s3|curr_state~0, shift_test, 1
instance = comp, \s3|curr_state[1] , s3|curr_state[1], shift_test, 1
instance = comp, \s3|q~0 , s3|q~0, shift_test, 1
instance = comp, \s3|q , s3|q, shift_test, 1
instance = comp, \i1|Mux1~0 , i1|Mux1~0, shift_test, 1
instance = comp, \i1|shifter_val[7] , i1|shifter_val[7], shift_test, 1
instance = comp, \s2|curr_state~1 , s2|curr_state~1, shift_test, 1
instance = comp, \s2|curr_state[0] , s2|curr_state[0], shift_test, 1
instance = comp, \s2|curr_state~0 , s2|curr_state~0, shift_test, 1
instance = comp, \s2|curr_state[1] , s2|curr_state[1], shift_test, 1
instance = comp, \s2|q~0 , s2|q~0, shift_test, 1
instance = comp, \s2|q , s2|q, shift_test, 1
instance = comp, \i1|Mux0~0 , i1|Mux0~0, shift_test, 1
instance = comp, \i1|shifter_val[8] , i1|shifter_val[8], shift_test, 1
instance = comp, \s1|curr_state~1 , s1|curr_state~1, shift_test, 1
instance = comp, \s1|curr_state[0] , s1|curr_state[0], shift_test, 1
instance = comp, \s1|curr_state~0 , s1|curr_state~0, shift_test, 1
instance = comp, \s1|curr_state[1] , s1|curr_state[1], shift_test, 1
instance = comp, \s1|q~0 , s1|q~0, shift_test, 1
instance = comp, \s1|q , s1|q, shift_test, 1
instance = comp, \SW[1]~input , SW[1]~input, shift_test, 1
instance = comp, \SW[2]~input , SW[2]~input, shift_test, 1
instance = comp, \SW[3]~input , SW[3]~input, shift_test, 1
instance = comp, \SW[4]~input , SW[4]~input, shift_test, 1
instance = comp, \SW[5]~input , SW[5]~input, shift_test, 1
instance = comp, \SW[6]~input , SW[6]~input, shift_test, 1
instance = comp, \SW[7]~input , SW[7]~input, shift_test, 1
instance = comp, \SW[8]~input , SW[8]~input, shift_test, 1
instance = comp, \SW[9]~input , SW[9]~input, shift_test, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, shift_test, 1
